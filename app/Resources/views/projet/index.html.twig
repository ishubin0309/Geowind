{% extends 'base.html.twig' %}

{% set title = 'Afficher' %}
{% set item = 'afficher' %}

{% block body %}
  <style>
  #nouveau_projet_nav > .nav > li > a {
    padding-right: 10px;
    padding-left: 10px;
  }
  .chat-online {
    color: #34ce57
  }
  .chat-offline {
    color: #e4606d
  }
  .chat-messages {
    display: flex;
    flex-direction: column;
    {# max-height: 800px;
    overflow-y: scroll #}
  }
  .chat-message-left,
  .chat-message-right {
    display: flex;
    flex-shrink: 0
  }
  .chat-message-left {
    margin-right: auto
  }
  .chat-message-right {
    flex-direction: row-reverse;
    margin-left: auto
  }
  .p-4 {
    padding: 1.5rem !important;
  }
  .pb-4, .py-4 {
    padding-bottom: 1.5rem !important;
  }
  .mb-4, .my-4 {
    margin-bottom: 1.5rem !important;
  }
  .font-weight-bold {
    font-weight: 700 !important;
  }
  .mb-1, .my-1 {
    margin-bottom: .25rem !important;
  }
  .pl-3, .px-3 {
    padding-left: 1rem !important;
  }
  .pr-3, .px-3 {
    padding-right: 1rem !important;
  }
  .pb-2, .py-2 {
    padding-bottom: .5rem !important;
  }
  .pt-2, .py-2 {
    padding-top: .5rem !important;
  }
  .mr-3, .mx-3 {
    margin-right: 1rem !important;
  }
  .ml-3, .mx-3 {
    margin-left: 1rem !important;
  }
  .bg-light {
    background-color: #f8f9fa !important;
  }
  .bg-gray {
    background-color: gray !important;
  }
  .border-bottom {
    border-bottom: 1px solid #dee2e6 !important;
    margin-bottom: .5rem !important;
  }
  .border-top {
    border-top: 1px solid #dee2e6 !important;
    margin-top: .5rem !important;
  }
  .px-4 {
    padding-right: 1.5rem !important;
    padding-left: 1.5rem !important;
  }
  .py-3 {
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;
  }
  </style>
  <div class="container">
    <div class="row">
      <div class="col-sm-5">
        <div id="loading-text" class="loading-text"><i class="fa fa-spinner fa-spin fa-fw"></i> Chargement ...</div>
        <div id="projet-data">
{#          {% if projets is not empty %}
            {% include 'projet/projet-data.html.twig' with { 'projet': projets[focus_index] } %}
          {% endif %}#}
        </div>
      </div>
      <div class="col-sm-7">
        <div id="map" class="map map-home"></div>
      </div>
    </div>
    <div class="row m-t-10">
      <div id="fullcontent" class="col-xs-12">
        
      </div>
    </div>
  </div>
        
  <div id="export-modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">Export CSV</h4>
        </div>
        <form id="csv-form" method="POST">
          <div class="modal-body">
            {% for key, option in export_option.optionList %}
              <label><input type="checkbox" name="selectedFields[]" checked value="{{ key }}"> {{ option }}</label><br>
            {% endfor %}
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Annuler</button>
            <button type="submit" class="btn btn-success"><i class="fa fa-fw fa-file-excel-o"></i> Export CSV</button>
          </div>
        </form>
      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->

{% endblock %}

{% block js %}
  <script>

    $('#map').height(function(index, height) {
      return window.innerHeight - $(this).offset().top - 40;
  });

    var map = L.map('map').setView([46, 2], 5.5);

    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    var customControl =  L.Control.extend({

      options: {
        position: 'topleft'
      },

      onAdd: function (map) {
        var container = L.DomUtil.create('a');
        container.setAttribute("role", "button");
        container.title="Center";
        container.text = "c";

        container.style.backgroundColor = 'white';     
        {# container.style.backgroundImage = "url(https://t1.gstatic.com/images?q=tbn:ANd9GcR6FCUMW5bPn8C4PbKak2BJQQsmC-K9-mbYBeFZm1ZM2w2GRy40Ew)"; #}
        container.style.backgroundSize = "30px 30px";
        container.style.width = '32px';
        container.style.height = '32px';
        container.style.lineHeight = '24px';
        container.style.textDecoration = 'none';
        container.style.cursor = 'pointer';
        container.style.textAlign = 'center';
        container.style.color = 'black';
        container.style.fontSize = '24px';
        container.style.borderRadius = '4px';
        container.style.marginTop = '2px';
        container.style.border = '2px solid rgba(0,0,0,0.2)';
        
        container.onmouseover = function(){
          container.style.backgroundColor = '#f4f4f4'; 
        }
        container.onmouseout = function(){
          container.style.backgroundColor = 'white'; 
        }

        container.onclick = function() {
          update_marker = 0;
          map.setView([46,2],5);
        }

        return container;
      }
    });

    map.addControl(new customControl());
    
    var progressions = {{ grid_helper.getJsonProgressions|raw }};

    var markers = {};

    $.each(progressions, function(code, progression) {
      markers[code] = new L.DivIcon.SVGIcon({ iconSize: L.point(24, 32), weight: 1, circleWeight: 1, color: '#000000', fillColor: progression.color, fillOpacity: 0.7 });
    })

    {% for projet in projets %}
      L.marker([{{ projet.latitude }}, {{ projet.longitude }}], { id: {{ projet.id }}, icon: markers["{{ projet.progression|e('js') }}"]}).addTo(map).bindTooltip("{{ projet.denomination|e('js') }}").bindPopup("{% if projet.chargeFoncier is not null %}{{ projet.chargeFoncier.username|e('js') }}{% else %}{{ projet.origine.username|e('js') }}{% endif %}").on('click', onMarkerClick){% if loop.index0 == focus_index %}.openPopup(){% endif %};
    {% endfor %}


    function onMarkerClick() {
      var id = this.options.id;
      $('#edit-link').data('id', id).prop('disabled', true)
      $('#show-link').data('id', id).prop('disabled', true);
      loadProjetData(id);
    }

    function loadProjetData(id) {
      $('#loading-text').show();
      $('#projet-data').hide();
      $('#fullcontent').hide();
      
      $('#projet-data').load(Routing.generate('projet_data', { id: id, {% if show is not null %}show: '{{ show|e('js') }}'{% endif %} }), '', function() {
        $('#loading-text').hide();
        
        $('#edit-link').data('id', id).prop('disabled', false)
        $('#show-link').data('id', id).prop('disabled', false);
        
        $('#fullcontent').html('');
        $('#fullrow').detach().appendTo($('#fullcontent'));
        
        $('#projet-data').show();
        $('#fullcontent').show();
      });
    }
    
    $('body').on('click', '#export-projet', function () {
      var projetId = $(this).data('id');
      $('#csv-form').attr('action', Routing.generate('projet_csv', { 'id': projetId }));
      $('#export-modal').modal('toggle');
    });
    
    {% if projets is not empty %}
      loadProjetData({{ projets[focus_index].id }});
    {% endif %}

  </script>
{% endblock %}