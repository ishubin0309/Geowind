{% extends 'base.html.twig' %}

{% set title = 'Modifier ' ~ user %}
{% set item = 'user' %}

{% block body %}
  <div class="container">
    <a href="{{ path('user_index') }}" class="btn btn-default btn-xs pull-right"><i class="fa fa-fw fa-close"></i> Annuler</a>
    <div class="page-title"><h1><i class="fa fa-fw fa-pencil"></i> {{ title }}</h1></div>
    <hr>
    <div class="row">
      <div class="col-sm-6">
      {{ form_start(form) }}
      {{ form_rest(form) }}
      </div>
      <div class="col-sm-6">
        <div id="map" class="map map-home" style="height: 500px; margin-bottom: 20px;"></div>
        <div id="main_photo" class="col-sm-12"><img style="width: inherit;" src=""></div>
      </div>
    </div>
    <div class="form-group">
      <div class="col-sm-10 col-sm-offset-2">
        <button type="submit" class="btn btn-primary"><i class="fa fa-check fa-fw"></i> Valider</button>
      </div>
    </div>
    {{ form_end(form) }}
  </div>
{% endblock %}

{% block js %}
<script>
  var map = L.map('map').setView([46, 2], 5.5);

  L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  var customControl =  L.Control.extend({

    options: {
      position: 'topleft'
    },

    onAdd: function (map) {
      var container = L.DomUtil.create('a');
      container.setAttribute("role", "button");
      container.title="Center";
      container.text = "c";

      container.style.backgroundColor = 'white';     
      {# container.style.backgroundImage = "url(https://t1.gstatic.com/images?q=tbn:ANd9GcR6FCUMW5bPn8C4PbKak2BJQQsmC-K9-mbYBeFZm1ZM2w2GRy40Ew)"; #}
      container.style.backgroundSize = "30px 30px";
      container.style.width = '32px';
      container.style.height = '32px';
      container.style.lineHeight = '24px';
      container.style.textDecoration = 'none';
      container.style.cursor = 'pointer';
      container.style.textAlign = 'center';
      container.style.color = 'black';
      container.style.fontSize = '24px';
      container.style.borderRadius = '4px';
      container.style.marginTop = '2px';
      container.style.border = '2px solid rgba(0,0,0,0.2)';
      
      container.onmouseover = function(){
        container.style.backgroundColor = '#f4f4f4'; 
      }
      container.onmouseout = function(){
        container.style.backgroundColor = 'white'; 
      }

      container.onclick = function() {
        update_marker = 0;
        map.setView([46,2],5.5);
      }

      return container;
    }
  });

  map.addControl(new customControl());

  var users = {};
  var markers = {};
  {% if form.vars.value.departements is not empty %}
    {% for departement in form.vars.value.departements %}
    users['{{ departement.nom }}'] = {0:'{{ departement.nom }}'};
    {% endfor %}
  {% endif %}
  $.each(users, function(i, user) {
    reverseGeolocalisation(user[0], 2);
  });
  function reverseGeolocalisation(query, update_marker) {
    if(markers[query] !== undefined) {
      return;
    }
    var nominatimUrl = 'https://nominatim.openstreetmap.org/search';
    $.ajax({
      type: 'GET',
      url: nominatimUrl,
      data: {
        q: query,
        extratags: 0,
        namedetails: 0,
        polygon_geojson: 0,
        format: 'json',
      },
      dataType: 'json',

    })
    .done(function(data) {

      if (data.length === 0) {
        return;
      }

      var searchLat = data[0]['lat'];
      var searchLong = data[0]['lon'];
      var bbox = data[0]['boundingbox'];
      var adresse = data[0]['display_name'];
      if(adresse.match('France')) {
        if(update_marker === true) {
          if (bbox != undefined) {
            map.fitBounds([
              [bbox[0], bbox[2]],
              [bbox[1], bbox[3]]
            ]);
          } else {
            map.setView([searchLat, searchLong], 10);
          }
          markers[query] = L.marker([searchLat, searchLong]).addTo(map).bindTooltip(query).bindPopup(query);
        } else if(update_marker) {
          markers[query] = L.marker([searchLat, searchLong]).addTo(map).bindTooltip(query).bindPopup(query);
        }
      } else if(data.length > 1) {
        var searchLat = data[1]['lat'];
        var searchLong = data[1]['lon'];
        var bbox = data[1]['boundingbox'];
        var adresse = data[1]['display_name'];
        if(adresse.match('France')) {
          if(update_marker === true) {
            if (bbox != undefined) {
              map.fitBounds([
                [bbox[0], bbox[2]],
                [bbox[1], bbox[3]]
              ]);
            } else {
              map.setView([searchLat, searchLong], 10);
            }
            markers[query] = L.marker([searchLat, searchLong]).addTo(map).bindTooltip(query).bindPopup(query);
          } else if(update_marker) {
            markers[query] = L.marker([searchLat, searchLong]).addTo(map).bindTooltip(query).bindPopup(query);
          }
        }
      }
      
    });
}
$('#user_edit_departements').select2();
$('#user_edit_departementsChefProjet').select2();
$('#user_edit_departementsChargeFoncier').select2();
var last_reverse_search = null;
$('#user_edit_departements').change(function() {
  $.each(markers, function(i, value) {
    found = false;
    $('#user_edit_departements option:selected').each(function(i2, value2) {
      if($(value2).text() == i) found = true;
    });
    if(!found) {
      map.removeLayer(markers[i]);
      delete markers[i];
    }
  });
  var query = $('#user_edit_departements option:selected:last').text().trim();
  if(query) {
    $('#user_edit_departements option:selected').each(function(item, element) {
      query = $(element).text().trim();
      reverseGeolocalisation(query, true);
    });
  }
  
});
  {# if(!default_lat) $('#user_edit_departements').change(); #}

    {# {% if form.vars.value.photo is defined and form.vars.value.photo %}
    $('#main_photo img').attr('src', '{{ asset('upload/' ~ form.vars.value.photo) }}');
    {% endif %}
    $('#user_edit_photoFile').change(function() {
      if (this.files && this.files[0]) {
        var reader = new FileReader();
        
        reader.onload = function(e) {
          $('#main_photo img').attr('src', e.target.result);
        }
        
        reader.readAsDataURL(this.files[0]); // convert to base64 string
      }
    }); #}
</script>
{% endblock %}
