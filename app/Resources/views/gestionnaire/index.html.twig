{% extends 'base.html.twig' %}

{% set title = 'Gestionnaire' %}
{% set item = 'gestionnaire' %}

{% block body %}
  <link rel="stylesheet" href="https://cdn.datatables.net/1.12.0/css/dataTables.bootstrap.min.css">
  <style>
  .table-striped tbody tr:hover {
    background-color: #31b0d5;
  }
  </style>
  <div class="container">
    <nav class="navbar navbar-default">
      <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#gestionnaire_nav" aria-expanded="false">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#"></a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="gestionnaire_nav">
          <ul class="nav navbar-nav">
            <li class="active"><a href="#" rel="tab_journal">Liste</a></li>
            <li><a href="#" rel="tab_list">Journal</a></li>
            <li class=""><a href="#" rel="tab_email">Email</a></li>
            <li class=""><a href="#" rel="tab_lettre">Lettre</a></li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>
    <fieldset id="tab_journal">
      <legend>Journal</legend>
      {% if messages is empty and lettres is empty %}
        <div class="alert alert-info mt0">
          Aucune gestionnaire contacté
        </div>
      {% else %}
        <table id="datatable" class="table table-striped table-middle">
          <thead>
            <tr>
              <th>Date1</th>
              <th>Département</th>
              <th>Commune</th>
              <th>Gestionnaire</th>
              <th>Destinaire</th>
              <th>Contactée par</th>
              <th class="column-fit">Objet</th>
              <th>Message</th>
              <th>Résultat</th>
              <th>Date2</th>
              <th class="column-fit">Mode contact</th>
            </tr>
          </thead>
          <tbody>
            {% for message in messages %}
            <tr>
              <td>{{ message.createdAt|date('d/m/Y') }}</td>
              <td>{{ message.departement }}</td>
              <td>{{ message.gestionnaire.insee }}</td>
              <td><a href="{{ path('gestionnaire_message', { 'insee': message.gestionnaire.insee }) }}">{{ message.gestionnaire }}</a></td>
              <td>{{ message.to }}</td>
              <td>{{ message.createdBy }}</td>
              <td class="column-fit">{{ message.object }}</td>
              <td>
              <button class="btn btn-info btn-sm btn_message">Afficher</button>
              <span class="hide">{{ message.body }}</span>
              </td>
              <td>
              {% set result = message.result ? message.result : '?' %}
                <span class="hide">{% if result == '+' %}plus{% elseif result == '-' %}moins{% elseif result == 'R' %}rappel{% else %}interrogation{% endif %}</span>
                <select rel="{{ message.id }}" type="message_gestionnaire" data="{{ result }}" style="width:100%;" class="form-control change_result">
                  {% for option in ['?', '+', '-', 'R'] %}
                  <option {% if option == result %}selected{% endif %}>({{ option }})</option>
                  {% endfor %}
                </select>
              </td>
              <td>{{ message.result is not null and message.result != '?' ? message.updatedAt|date('d/m/Y') : '' }}</td>
              <td class="column-fit">Email
              {% if is_granted('ROLE_ADMIN') %}
              &nbsp;&nbsp;<button id="{{ message.id }}" type="message_gestionnaire" class="btn btn-danger btn-xs button-delete" title="Double click"><i class="fa fa-fw fa-trash"></i></button>
              {% endif %}</td>
            </tr>
            {% endfor %}
            {% for lettre in lettres %}
            <tr>
              <td>{{ lettre.createdAt|date('d/m/Y') }}</td>
              <td>{{ lettre.departement }}</td>
              <td>{{ lettre.gestionnaire.insee }}</td>
              <td><a href="{{ path('gestionnaire_lettre', { 'insee': lettre.gestionnaire.insee }) }}">{{ lettre.gestionnaire }}</a></td>
              <td>{{ lettre.to }}</td>
              <td>{{ lettre.createdBy }}</td>
              <td class="column-fit">{{ lettre.object }}</td>
              <td>
              <button class="btn btn-info btn-sm btn_message">Afficher</button>
              <span class="hide">
              <strong>Adresse:</strong> <br>{{ lettre.to }}<br><br>
              <strong>Lettre:</strong> <br>{{ lettre.body }}
              {% if lettre.projet is not empty and lettre.projet.documents is not empty %}
                {% for document in lettre.projet.documents %}
                  {% if document.type == 'plan_parcellaire' %}
                  <img class="letter_plan_parcellaire" src="{{ asset('upload/' ~ document.document) }}" alt="Plan parcellaire"><br>
                  {% endif %}
                {% endfor %}
              {% endif %}
              </span>
              </td>
              <td>
              {% set result = lettre.result ? lettre.result : '?' %}
                <span class="hide">{% if result == '+' %}plus{% elseif result == '-' %}moins{% elseif result == 'R' %}rappel{% else %}interrogation{% endif %}</span>
                <select rel="{{ lettre.id }}" type="lettre_gestionnaire" data="{{ result }}" style="width:100%;" class="form-control change_result">
                  {% for option in ['?', '+', '-', 'R'] %}
                  <option {% if option == result %}selected{% endif %}>({{ option }})</option>
                  {% endfor %}
                </select>
              </td>
              <td>{{ lettre.updatedAt|date('d/m/Y') }}</td>
              <td class="column-fit">Lettre
              {% if is_granted('ROLE_ADMIN') %}
              &nbsp;&nbsp;<button id="{{ lettre.id }}" type="lettre_gestionnaire" class="btn btn-danger btn-xs button-delete" title="Double click"><i class="fa fa-fw fa-trash"></i></button>
              {% endif %}
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      {% endif %}
    </fieldset>
    <fieldset id="tab_list" class="hide">
      <legend>Liste</legend>
      <div class="btn-group col-sm-offset-3" role="group" aria-label="...">
        <a href="{{ path('gestionnaire_export') }}" class="btn btn-success btn-sm"><i class="fa fa-fw fa-save"></i> Exporter</a>
        <button id="import" class="btn btn-danger btn-sm"><i class="fa fa-fw fa-paperclip"></i> Importer</a>
      </div>
      {% if gestionnaires is empty %}
        <div class="alert alert-info mt0">
          Aucun gestionnaire
        </div>
      {% else %}
        <table id="datatable2" class="table table-striped table-middle">
          <thead>
            <tr>
              <th>Gestionnaire</th>
              <th>Compétence</th>
              <th>Contact</th>
              <th>Fonction</th>
              <th>Adresse</th>
              <th>Ville</th>
              <th>Email</th>
              <th>Téléphone</th>
              <th>Département</th>
            </tr>
          </thead>
          <tbody>
            {% for gestionnaire in gestionnaires %}
            <tr>
              <td>{{ gestionnaire.gestionnaire }}</td>
              <td>{{ gestionnaire.competence }}</td>
              <td>{{ gestionnaire.contact }}</td>
              <td>{{ gestionnaire.fonction }}</td>
              <td>{{ gestionnaire.adresse }}</td>
              <td>{{ gestionnaire.ville }}</td>
              <td>{{ gestionnaire.email }}</td>
              <td>{{ gestionnaire.telephone }}</td>
              <td>{{ gestionnaire.departement.nom }}</td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      {% endif %}
    </fieldset>
    <fieldset id="tab_annuaire" class="hide">
      <legend>Annuaire</legend>
    </fieldset>

  </div>

  <div class="row hide">
    <div class="col-xs-12">
      
      {{ form_start(form) }}
      <fieldset>
        <legend>Importer</legend>
        <div class="col-xs-4">
        {{ form_row(form.importFile) }}
        </div>
        <div class="col-xs-2">
          <button id="import_submit" type="submit" class="btn btn-primary"><i class="fa fa-paperclip"></i> Importer</button>
        </div>
      </fieldset>
      
      {{ form_rest(form) }}
      {{ form_end(form) }}
    </div>
  </div>
  
  <div class="modal fade bs-modal" tabindex="-1" role="dialog" aria-labelledby="emailModal">
    <div class="modal-dialog" role="document">
      <div class="modal-content text-center">
        <div id="show_message" style="padding: 20px;text-align: left;" class="modal-body">
        </div>
      </div>
    </div>
  </div>
{% endblock %}

{% block js %}
  <script src="https://cdn.datatables.net/1.12.0/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/1.12.0/js/dataTables.bootstrap.min.js"></script>
  <script>
  $(document).ready(function () {
    $('#datatable2').DataTable( {
      "order": [],
      "columnDefs": [{
        "targets": 8,
        "orderable": false
      }],
      language: {
        processing:     "Traitement en cours...",
        search:         "Rechercher&nbsp;:",
        lengthMenu:    "Afficher _MENU_ &eacute;l&eacute;ments",
        info:           "Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
        infoEmpty:      "Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments",
        infoFiltered:   "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
        infoPostFix:    "",
        loadingRecords: "Chargement en cours...",
        zeroRecords:    "Aucun &eacute;l&eacute;ment &agrave; afficher",
        emptyTable:     "Aucune donnée disponible dans le tableau",
        paginate: {
          first:      "Premier",
          previous:   "Pr&eacute;c&eacute;dent",
          next:       "Suivant",
          last:       "Dernier"
        },
        aria: {
          sortAscending:  ": activer pour trier la colonne par ordre croissant",
          sortDescending: ": activer pour trier la colonne par ordre décroissant"
        }
      },
      initComplete: function () {
        this.api()
          .columns(8)
          .every(function () {
            var column = this;
            var select = $('<select class="form-control input-sm"><option value="">Tous les départements</option></select>')
              .appendTo($(column.header()).empty())
              .on('change', function () {
                  var val = $.fn.dataTable.util.escapeRegex($(this).val());

                  column.search(val ? '^' + val + '$' : '', true, false).draw();
              });

            column
              .data()
              .unique()
              .sort()
              .each(function (d, j) {
                  select.append('<option value="' + d + '">' + d + '</option>');
              });
          });
        },
  } );
  });

  $('#import').click(function() {
    $('#import_importFile').click();
  });
  var count = 1;
  
  $('#import_importFile').change(function() {
    swal({
        title: "Importer ce fichier ?",
        text: "Les parcs anciens seront supprimés définitivement.",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Importer",
        cancelButtonText: "Annuler",
        closeOnConfirm: false,
        closeOnCancel: true,
        allowOutsideClick: true,
        showLoaderOnConfirm: true,
      },
      function(isConfirm){
        if (isConfirm) {
          $('#import_importFile').parents('form').submit();
          setInterval(function() {
            if(count) {
              count = 0;
              $.get('{{ path('gestionnaire_count_all') }}', function( data ) {
                count = 1;
                $('body').find('.sweet-alert h2').html(data + ' éoliennes importées');
              });
            }
          }, 3000);
        } else {

        }
    });
  });

  var oTable = $('#datatable').DataTable({
    language: dtLang,
    "order": [[ 0, "asc" ]],
    columnDefs: [
        { targets: 0, searchable: false },
        { targets: 1, searchable: true },
        { targets: 2, searchable: true },
        { targets: 3, searchable: true },
        { targets: 4, searchable: false },
        { targets: 5, searchable: false },
        { targets: 6, searchable: false },
        { targets: 7, searchable: false, orderable: false },
        { targets: 8, searchable: true },
        { targets: 9, searchable: false },
        { targets: 10, searchable: false }
    ],
    language: {
      processing:     "Traitement en cours...",
      search:         "Rechercher&nbsp;:",
      lengthMenu:    "Afficher _MENU_ &eacute;l&eacute;ments",
      info:           "Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
      infoEmpty:      "Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments",
      infoFiltered:   "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
      infoPostFix:    "",
      loadingRecords: "Chargement en cours...",
      zeroRecords:    "Aucun &eacute;l&eacute;ment &agrave; afficher",
      emptyTable:     "Aucune donnée disponible dans le tableau",
      paginate: {
        first:      "Premier",
        previous:   "Pr&eacute;c&eacute;dent",
        next:       "Suivant",
        last:       "Dernier"
      },
      aria: {
        sortAscending:  ": activer pour trier la colonne par ordre croissant",
        sortDescending: ": activer pour trier la colonne par ordre décroissant"
      }
    },
    paging: false,
    bInfo: false,
  });
  $('body').on('keyup change', '#datatable_filter input', function (e) {
    e.preventDefault();
    if($(this).val() == '+') keyword = 'plus';
    else if($(this).val() == '-') keyword = 'moins';
    else if($(this).val().toLowerCase() == 'r') keyword = 'rappel';
    else if($(this).val() == '?') keyword = 'interrogation';
    else keyword = $(this).val();
    oTable.search(keyword).draw();
  });
  $("#input-gestionnaire, #input-gestionnaire-lettre, #input-gestionnaire-appel").select2({
    ajax: {
      url: Routing.generate('gestionnaire_search'),
      dataType: 'json',
      delay: 500,
      processResults: function (data) {
        return {
          results: data
        };
      }
    },
    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
    minimumInputLength: 1,
  });
  var last_annuaire_gestionnaire_insee = '';
  function annuaire_gestionnaire(insee) {
    last_annuaire_gestionnaire_insee = insee;
    var csrf = '{{ csrf_token('token')|e('js') }}';
    $.ajax({
      url: Routing.generate('gestionnaire_message', { insee: last_annuaire_gestionnaire_insee }),
      type: 'GET',
      data: { token: csrf },
      beforeSend: function() {
        $('#new_mail').html('');
      },
      success: function(result) {
        $('#new_mail').html(result);
      }
    });
  }
  $('#input-gestionnaire').on('select2:select', function (e) {
    var data = e.params.data;
    annuaire_gestionnaire(data.insee);
  });

  var last_annuaire_gestionnaire_lettre_insee = '';
  function annuaire_gestionnaire_lettre(insee) {
    last_annuaire_gestionnaire_lettre_insee = insee;
    var csrf = '{{ csrf_token('token')|e('js') }}';
    $.ajax({
      url: Routing.generate('gestionnaire_lettre', { insee: last_annuaire_gestionnaire_lettre_insee }),
      type: 'GET',
      data: { token: csrf },
      beforeSend: function() {
        $('#new_letter').html('');
      },
      success: function(result) {
        $('#new_letter').html(result);
      }
    });
  }
  $('#input-gestionnaire-lettre').on('select2:select', function (e) {
    var data = e.params.data;
    annuaire_gestionnaire_lettre(data.insee);
  });

  $('.btn_message').click(function() {
    var message = $(this).parent().find('span').html().replace(/\n/, '<br>');
    $('.bs-modal').modal('show');
    $('#show_message').html(message.replace(/\n/g, '<br>'));
  });
  $(".change_result").select2();

  $('.change_result').on('select2:select', function() {
    option = $(this).val().replace(/(\(|\))/g, '').trim();
    id = $(this).attr('rel');
    type = $(this).attr('type');
    if (type=='message_gestionnaire') {
      title = 'Le résultat du message va être changé';
    } else if (type=='lettre_gestionnaire') {
      title = 'Le résultat de la lettre va être changé';
    }
    old_data = $(this).attr('data');
    swal({
        title: "êtes-vous sûr ?",
        text: title,
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Changer",
        cancelButtonText: "Annuler",
        closeOnConfirm: false,
        closeOnCancel: true,
        allowOutsideClick: true,
        showLoaderOnConfirm: true,
      },
      function(isConfirm){
        if (isConfirm) {
          var csrf = '{{ csrf_token('token')|e('js') }}';
          $.ajax({
            url: Routing.generate(type + '_edit', {id: id}),
            type: 'POST',
            data: { result: option, token: csrf  },
            success: function(result) {
              window.location.href = '{{ path('gestionnaire_index') }}';
            }
          });
        } else {
          $('select[rel="'+id+'"]').val('('+old_data+')');
          $('.change_result').change();
        }
    });
  });
  {% if is_granted('ROLE_ADMIN') %}
  $('.button-delete').dblclick(function() {
    id = $(this).attr('id');
    type = $(this).attr('type');
    if (type=='message_gestionnaire') {
      title = 'Le message sera supprimé définitivement.';
    } else if (type=='lettre_gestionnaire') {
      title = 'La lettre sera supprimée définitivement.';
    }
    if (!id) {
      return;
    }
    swal({
      title: "Supprimer ?",
      text: title,
      type: "warning",
      showCancelButton: true,
      confirmButtonColor: "#DD6B55",
      confirmButtonText: "Supprimer",
      cancelButtonText: "Annuler",
      closeOnConfirm: false,
      closeOnCancel: true,
      allowOutsideClick: true,
      showLoaderOnConfirm: true,
    },
    function(isConfirm){
      if (isConfirm) {
        var csrf = '{{ csrf_token('token')|e('js') }}';
        $.ajax({
          url: Routing.generate(type + '_delete', {id: id}),
          type: 'DELETE',
          data: {token: csrf},
          success: function(result) {
            location.reload();
          }
        });
      } else {

      }
    });

  });
  {% endif %}
  $('.reminder-datepicker').datepicker({
    format: 'dd/mm/yyyy',
    autoclose: true,
    language: 'fr',
    clearBtn: true,
  });
  $('.reminder-datepicker').change(function() {
    option = $(this).val().trim();
    id = $(this).attr('rel');
    type = $(this).attr('type');
    if (type=='message_gestionnaire') {
      title = 'La date de rappel du message va être changée';
    } else if (type=='lettre_gestionnaire') {
      title = 'La date de rappel de la lettre va être changée';
    }
    old_data = $(this).attr('data');
    if(option > '{{ 'now'|date('d/m/Y') }}') {
      swal({
          title: "êtes-vous sûr ?",
          text: title,
          type: "warning",
          showCancelButton: true,
          confirmButtonColor: "#DD6B55",
          confirmButtonText: "Changer",
          cancelButtonText: "Annuler",
          closeOnConfirm: false,
          closeOnCancel: true,
          allowOutsideClick: true,
          showLoaderOnConfirm: true,
        },
        function(isConfirm){
          if (isConfirm) {
            var csrf = '{{ csrf_token('token')|e('js') }}';
            $.ajax({
              url: Routing.generate(type + '_edit', {id: id}),
              type: 'POST',
              data: { dateReminder: option, token: csrf  },
              success: function(result) {
                window.location.href = '{{ path('gestionnaire_index') }}';
              }
            });
          } else {
            $('input[type="'+type+'"][rel="'+id+'"]').val(old_data);
          }
      });
    } else $('input[type="'+type+'"][rel="'+id+'"]').val(old_data);
  });
  $('#gestionnaire_nav a').click(function (e) {
    var attr = $(this).attr('rel');
    if(typeof attr !== typeof undefined && attr !== false) {
      e.preventDefault();
      $('#gestionnaire_nav li').removeClass('active');
      $(this).parent().addClass('active');
      $('fieldset').addClass('hide');
      $('fieldset#' + attr).removeClass('hide');
      if(attr == 'tab_carte') map.invalidateSize();
    }
  });

  function copyDivToClipboard() {
      var range = document.createRange();
      range.selectNode(document.getElementById('show_message'));
      window.getSelection().removeAllRanges(); // clear current selection
      window.getSelection().addRange(range); // to select text
      document.execCommand("copy");
      window.getSelection().removeAllRanges();// to deselect
      alert('Le message est copié.');
  }
  </script>
{% endblock %}
