{% extends 'base.html.twig' %}

{% set title = 'Mairie' %}
{% set item = 'annuaire' %}

{% block body %}

  <div class="container">

    <h3>Mairies contactées</h3>
    <hr>
    
    {% if messages is empty %}
      <div class="alert alert-info mt0">
        Aucune mairie contactée
      </div>
    {% else %}
      <div class="row">
        <div class="col-sm-6">
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Date</th>
                <th>Mairie</th>
                <th>Résultat</th>
              </tr>
            </thead>
            <tbody>
              {% for message in messages %}
              <tr>
                <td>{{ message.createdAt|date('d/m/Y') }}</td>
                <td>{{ message.mairie }}</td>
                <td>
                {% set result = message.result ? message.result : '?' %}
                {{ message.result ? '(' ~ message.result ~ ')' : '(?)' }} <i style="color:{% if result == '+' %}green{% elseif result == '-'%}red{% else %}gray{% endif %};" class="fa fa-map-marker" aria-hidden="true"></i>
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
        <div class="col-sm-6">
          <div id="map" class="map map-home " style="height: 500px; margin-bottom: 20px;"></div>
        </div>
      </div>
    {% endif %}

  </div>
        
{% endblock %}

{% block js %}
  <script>
  var map = L.map('map').setView([46, 2], 5.5);

  L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  var customControl =  L.Control.extend({

    options: {
      position: 'topleft'
    },

    onAdd: function (map) {
      var container = L.DomUtil.create('a');
      container.setAttribute("role", "button");
      container.title="Center";
      container.text = "c";

      container.style.backgroundColor = 'white';     
      {# container.style.backgroundImage = "url(https://t1.gstatic.com/images?q=tbn:ANd9GcR6FCUMW5bPn8C4PbKak2BJQQsmC-K9-mbYBeFZm1ZM2w2GRy40Ew)"; #}
      container.style.backgroundSize = "30px 30px";
      container.style.width = '32px';
      container.style.height = '32px';
      container.style.lineHeight = '24px';
      container.style.textDecoration = 'none';
      container.style.cursor = 'pointer';
      container.style.textAlign = 'center';
      container.style.color = 'black';
      container.style.fontSize = '24px';
      container.style.borderRadius = '4px';
      container.style.marginTop = '2px';
      container.style.border = '2px solid rgba(0,0,0,0.2)';
      
      container.onmouseover = function(){
        container.style.backgroundColor = '#f4f4f4'; 
      }
      container.onmouseout = function(){
        container.style.backgroundColor = 'white'; 
      }

      container.onclick = function() {
        update_marker = 0;
        map.setView([46,2],5.5);
      }

      return container;
    }
  });

  map.addControl(new customControl());
  {% if messages is not empty %}
  var messages = {};
  var markers = {};
  {% for message in messages %}
    {% set result = message.result ? message.result : '?' %}
    messages[{{ loop.index0 }}] = {0:'{{ message.mairie.region }}', 1:'{{ message.mairie.commune }}', 2:'{{ message.mairie }}', 3:'{% if result == '+' %}green{% elseif result == '-'%}red{% else %}gray{% endif %}'};
  {% endfor %}console.log(messages);
  $.each(messages, function(i, message) {
    reverseGeolocalisation(message[0], message[1], message[2], message[3]);
  });
  function reverseGeolocalisation(query, commune, marie, color) {
    var nominatimUrl = 'https://nominatim.openstreetmap.org/search';
    $.ajax({
      type: 'GET',
      url: nominatimUrl,
      data: {
        q: query,
        extratags: 0,
        namedetails: 0,
        polygon_geojson: 0,
        format: 'json',
      },
      dataType: 'json',

    })
    .done(function(data) {

      if (data.length === 0) {
        return;
      }

      var searchLat = data[0]['lat'];
      var searchLong = data[0]['lon'];
      var bbox = data[0]['boundingbox'];
      var adresse = data[0]['display_name'];
      if(adresse.match('France')) {
        marker = new L.DivIcon.SVGIcon({ iconSize: L.point(24, 32), weight: 1, circleWeight: 1, color: '#000000', fillColor: color, fillOpacity: 0.7 });
        L.marker([searchLat, searchLong], { icon: marker}).addTo(map).bindTooltip(marie).bindPopup('Région: ' + query + '<br>Commune: ' + commune);
      }
      
    });
  }
  {% endif %}
    
  </script>
{% endblock %}